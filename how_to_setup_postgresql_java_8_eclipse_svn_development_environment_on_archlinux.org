* PostgreSQL, Java 8, Eclipse and Subversion on an Arch Linux development environment

This guide assumes that you have followed *How to get Arch Linux up
and running for Junior Developers*.

** PostgreSQL

Install the =postgresql= package. It will also create a system user
called =postgres=.

~sudo pacman -S postgresql~

Switch to the PostgreSQL user by executing the following command:

~sudo su -l postgres~

Let's initialize the cluster:

~initdb -D /var/lib/postgres/data~

Exit and return to the regular user by using =exit=. Start and enable
the =postgresql.service=:

#+begin_src sh
sudo systemctl enable postgresql
sudo systemctl start postgresql
#+end_src

Now to creating a role for the user =guilherme=. Run ~psql~ as the
PostgreSQL user (~sudo -u postgres psql~), and then:

#+begin_src sql
create role guilherme;
CREATE DATABASE guilherme OWNER guilherme;

alter role guilherme login;
#+end_src

Type =\q= and hit Enter to quit.

To safely create a password for =guilherme= (which is necessary for
=http= or =ODBC= connections) log in to your database by running =psql= and then:

~\password~

Type =\q= and hit Enter to quit.

** Java 8

#+begin_src sh
sudo pacman -S jdk8-openjdk
#+end_src

Set it as default:

#+begin_src sh
sudo archlinux-java set java-8-openjdk
#+end_src

** Subversion

#+begin_src sh
sudo pacman -S subversion
#+end_src

*** Configuring Subversion

The configuration files are created automatically the first time you
run the =svn= command. Run, for example:

~svn add --help~

Now check to see if the folder =~/.subversion= exists and it contains the files:

#+begin_src sh
auth
config
README.txt
servers
#+end_src

If it doesn't, then head to the next section. If it does, just skip it.

**** Manually creating Subversion configuration files (optional)

Create the /config/ file (and the directory) =~/.subversion/config=:

#+begin_src conf
# ~/.subversion/config

# password-stores = gpg-agent,gnome-keyring,kwallet

### Set diff-cmd to the absolute path of your 'diff' program.
###   This will override the compile-time default, which is to use
###   Subversion's internal diff implementation.
# diff-cmd = diff_program (diff, gdiff, etc.)

### Set merge-tool-cmd to the command used to invoke your external
### merging tool of choice. Subversion will pass 5 arguments to
### the specified command: base theirs mine merged wcfile
# merge-tool-cmd = merge_command
#+end_src

This was obtained from Debian's subversion package
(=/etc/subversion/config=). I believe these are the main things you'd
want to customize.

**** Subversion password caching using gpg-agent

Install =gnupg=:

~sudo pacman -S gnupg~

Set =gpg-agent= as a password store in =~/.subversion/config=:

#+begin_src conf
# ~/.subversion/config

password-stores = gpg-agent

# ...
#+end_src

Add this to your =~/.bashrc= (at the environment variables section):

#+begin_src bash
GPG_TTY=$(tty)
export GPG_TTY
#+end_src

Reload =~/.bashrc=:

~. ~/.bashrc~

Now suppose there's a repository reachable at
=http://svnrepository.localdomain=. List its contents:

~svn ls http://svnrepository.localdomain~

If you're connected via /SSH/, you should be prompted by a =pinentry=
dialog like this:

#+begin_src
┌────────────────────────────────────────────────────────────────────────────────────────┐
│ Enter your Subversion password for <http://svnrepository.localdomain:80> svnrepository │
│                                                                                        │
│ Password for 'guilherme':  __________________________________________________________  │
│                                                                                        │
│             <OK>                                                   <Cancel>            │
└────────────────────────────────────────────────────────────────────────────────────────┘
#+end_src

If you're on an /LXDE/ session, you'll get a graphical prompt.

By default, your password will be cached for 2 hours (=man gpg-agent=).

Information obtained from https://stackoverflow.com/q/48390012.

** Eclipse

Download the Eclipse IDE for Enterprise Java Developers (Linux 64-bit)
and extract it with =tar=.

Create a launcher:

#+begin_src conf
# ~/.local/share/applications/eclipse.desktop

[Desktop Entry]
Type=Application
Name=Eclipse
Comment=Eclipse IDE
Icon=/home/guilherme/eclipse/icon.xpm
Exec=/home/guilherme/eclipse/eclipse
Categories=Development;GUIDesigner;
#+end_src

*** COMMENT lxpanel

To rebuild the /LXDE/ panel run:

~lxpanelctl restart~
