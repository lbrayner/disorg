#+title: How to get OpenBSD up and running with i3wm

* The OpenBSD installer

** Keyboard layout

In the /Choose your keyboard layout/ prompt, type in =br= (Brazilian)
and hit /Enter/.

** xenodm

From a [[https://www.reddit.com/r/openbsd/comments/f40mq0/why_startx_does_not_work_for_nonroot_users][reddit post]]:

#+begin_quote
The =setuid= bit was removed from the *X* server for security reasons
which meant that =startx(1)= no longer works, it is recommended to use
=xenodm(1)= instead.
#+end_quote

In the /Do you want the X Window System to be started by xenodm(1)?/
prompt, type in =yes= and hit /Enter/.

** Let's install the sets!

In the /Directory does not contain SHA256.sig. Continue without
verification?/, type in =yes= and hit /Enter/.

From the [[https://www.openbsd.org/faq/index.html][OpenBSD FAQ]]:

#+begin_quote
The =installXX.iso= and =installXX.fs= images do not contain an =SHA256.sig=
file, so the installer will complain that it can't check the signature
of the included sets:

=Directory does not contain SHA256.sig. Continue without verification? [no]=

This is because it would make no sense for the installer to verify
them. If someone were to make a rogue installation image, they could
certainly change the installer to say the files were legitimate. If
the image's signature has been verified beforehand, it is safe to
answer "yes" at that prompt.
#+end_quote

* First steps

** syspatch

Log in as =root=. You'll land on an instance of =xterm= in the default
window manager: =fvwm=.

From the [[https://www.openbsd.org/faq/index.html][OpenBSD FAQ]]:

#+begin_quote
*Security Updates*

When a critical bug is found, the fix will be committed to the
*-current* tree (and made available in snapshot builds) as soon as
possible. From that point on, things are handled differently depending
on whether the problem was in the *OpenBSD* base system or a third party
package. ...

For the *OpenBSD* base system, security fixes are normally applied to
the two most recent releases. There are four options:
#+end_quote

The option referred to in this topic is applying binary patches with =syspatch=:

#+begin_quote
If you're running a supported release of *OpenBSD*, you can simply use
the =syspatch(8)= utility to upgrade any files in need of security or
reliability fixes. This is the quickest and easiest method to get the
base system up to date.
#+end_quote

On =xterm= run:

#+begin_src sh
syspatch
#+end_src

** Installing i3 and other third-party packages

Run:

#+begin_src sh
pkg_add vim bash i3 dwm firefox
#+end_src

After the installation you'll be warned about the newly installed
font =terminus= and the /font path/.

** Setting up doas for the non-root user

=doas= allows you to run commands as another user, much like
=sudo=. But unlike it, =doas= has a much smaller feature set and is
part of the base system.

Create the file =/etc/doas.conf= with the following contents
(suppose the non-root username is =guilherme=):

#+begin_src sh
# /etc/doas.conf

permit guilherme as root
#+end_src

You may use freshly installed =vim= or the base system's =vi= for that
purpose.

** Changing the non-root user's default shell

On =OpenBSD=, the default shell is =ksh=. Change it to =bash= for
=guilherme=:

#+begin_src sh
chsh -s /usr/local/bin/bash guilherme
#+end_src

We're now ready to login as =guilherme=. Log out (as the =root= user)
by clicking on the desktop and selecting /Exit/ from the drop-down
menu.

* Setting up i3 as the non-root user

Log in as =guilherme=. Likewise, you'll be faced with an instance of
=xterm= in the default window manager, which is =fvwm=. But your shell
is =bash= rather than =ksh=.
